import { DynamicServiceBody, DynamicServiceResponseOutput, DynamicServiceResponseOutputCredentialAuthCallback, DynamicServiceResponseOutputCredentialGenerateAuthURI, DynamicServiceResponseOutputCredentialTest, DynamicServiceResponseOutputListener, DynamicServiceResponseOutputWebhook } from "..";
import { SandboxLib } from "..";
export declare type ActionReturnValue = Promise<DynamicServiceResponseOutput>;
export declare type ActionReturnFunction = ((body: DynamicServiceBody, lib: SandboxLib) => ActionReturnValue | ListenerReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => (ActionReturnValue | ListenerReturnValue));
export declare type CredentialReturnValue = Promise<DynamicServiceResponseOutputCredentialAuthCallback>;
export declare type CredentialReturnFunction = ((body: DynamicServiceBody, lib: SandboxLib) => CredentialReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => CredentialReturnValue);
export declare type CredentialGenerateAuthURIReturnValue = Promise<DynamicServiceResponseOutputCredentialGenerateAuthURI>;
export declare type CredentialGenerateAuthURIFunction = ((body: DynamicServiceBody, lib: SandboxLib) => CredentialGenerateAuthURIReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => CredentialGenerateAuthURIReturnValue);
export declare type CredentialTestReturnValue = Promise<DynamicServiceResponseOutputCredentialTest>;
export declare type CredentialTestFunction = ((body: DynamicServiceBody, lib: SandboxLib) => CredentialTestReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => CredentialTestReturnValue);
export declare type ListenerReturnValue = Promise<DynamicServiceResponseOutputListener>;
export declare type ListenerReturnFunction = ((body: DynamicServiceBody, lib: SandboxLib) => ListenerReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => ListenerReturnValue);
export declare type WebhookReturnValue = Promise<DynamicServiceResponseOutputWebhook>;
export declare type WebhookReturnFunction = ((body: DynamicServiceBody, lib: SandboxLib) => WebhookReturnValue) | (<T = any>(body: DynamicServiceBody, lib: SandboxLib, config: T) => WebhookReturnValue);
